import MockoloFramework

let annotationWithMetadata = """
/// \(String.mockAnnotation)
public protocol Foo {
    var name: String { get }
}

/// \(String.mockAnnotation)(namespace: XYZ)
public protocol Bar {
    var name: String { get }
}
"""

let annotationWithMetadataMock =
"""


///
/// @Generated by Mockolo
///



#if MOCK




public class FooMock: Foo {
    public init() {}
    public init(name: String = "") {
        self.name = name
    }
    var nameSetCallCount = 0
    var underlyingName: String = ""
    public var name: String {
        get {
            return underlyingName
        }
        set {
            underlyingName = newValue
            nameSetCallCount += 1
        }
    }
}

#endif

///
/// @Generated by Mockolo
///

/// MARK - XYZ

#if MOCK




public class BarMock: Bar {
    public init() {}
    public init(name: String = "") {
        self.name = name
    }
    var nameSetCallCount = 0
    var underlyingName: String = ""
    public var name: String {
        get {
            return underlyingName
        }
        set {
            underlyingName = newValue
            nameSetCallCount += 1
        }
    }
}

#endif
"""
