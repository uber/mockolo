name: Release

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  SWIFT_VERSION: "6.1.0"

jobs:
  build:
    name: Build for ${{ matrix.destination.name }}
    runs-on: ${{ matrix.destination.os }}
    strategy:
      matrix:
        destination:
          - { name: "ubuntu-aarch64", os: ubuntu-22.04-arm }
          - { name: "ubuntu-x86_64", os: ubuntu-22.04 }
          - { name: "macos-universal", os: macos-15 }
    steps:
    - if: startsWith(matrix.destination.name, 'ubuntu')
      uses: vapor/swiftly-action@v0.2
      with:
        toolchain: ${{ env.SWIFT_VERSION }}
    - if: startsWith(matrix.destination.name, 'macos')
      run: sudo xcode-select -s /Applications/Xcode_16.3.app

    - uses: actions/checkout@v4
    - name: Create the binary
      run: ./install-script.sh -s . -t mockolo -d . -o mockolo.${{ matrix.destination.name }}.tar.gz
    - name: Upload the binary
      uses: actions/upload-artifact@v4
      with:
        name: mockolo.${{ matrix.destination.name }}.tar.gz
        path: mockolo.${{ matrix.destination.name }}.tar.gz

  check-portability:
    needs: build
    name: TestRun on ${{ matrix.destination.os }} for ${{ matrix.destination.name }}
    runs-on: ${{ matrix.destination.os }}
    strategy:
      fail-fast: false
      matrix:
        destination:
          - { name: "ubuntu-x86_64", os: ubuntu-24.04 }
          - { name: "ubuntu-x86_64", os: ubuntu-22.04 }
          - { name: "ubuntu-aarch64", os: ubuntu-24.04-arm }
          - { name: "ubuntu-aarch64", os: ubuntu-22.04-arm }
          - { name: "macos-universal", os: macos-15 }
          - { name: "macos-universal", os: macos-14 }
          - { name: "macos-universal", os: macos-13 }
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: mockolo.${{ matrix.destination.name }}.tar.gz
    - name: Unpack the binary
      run: tar -xvf mockolo.${{ matrix.destination.name }}.tar.gz
    - name: Run the binary
      run: ./mockolo --version

  make-artifact-bundle:
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      checksum: ${{ steps.checksum.outputs.checksum }}
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - run: bundle/make_artifactbundle.sh ${{ github.event.release.tag_name || github.ref_name }}
      - name: Upload artifact bundle
        uses: actions/upload-artifact@v4
        with:
          name: mockolo.artifactbundle.zip
          path: mockolo.artifactbundle.zip
      
      - name: Compute checksum
        id: checksum
        run: echo "checksum=$(swift package compute-checksum mockolo.artifactbundle.zip)" >> "$GITHUB_OUTPUT"

  deploy-binary:
    if: ${{ github.event_name == 'release' }}
    needs: [check-portability, make-artifact-bundle]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        merge-multiple: true
    - name: Deploy the binary
      uses: softprops/action-gh-release@v2
      with:
        body: |
          ----

          ## For Build Tools Plugin (artifactbundle)

          ```swift
          .binaryTarget(
              name: "mockolo",
              url: "https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/mockolo.artifactbundle.zip",
              checksum: "${{ needs.make-artifact-bundle.outputs.checksum }}"
          ),
          ```

        append_body: true
        files: |
          mockolo.ubuntu-x86_64.tar.gz
          mockolo.ubuntu-aarch64.tar.gz
          mockolo.macos-universal.tar.gz
          mockolo.artifactbundle.zip
